{"version":3,"sources":["components/Navbar.js","components/NowShowingSlider.js","components/NowShowing.js","components/MovieList.js","components/Trending.js","components/Popular.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","href","data-toggle","data-target","id","NowShowingSlider","_ref","image","title","overview","status","styling","background","backgroundRepeat","backgroundSize","minHeight","backgroundPosition","style","NowShowing","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","results","_this2","url","concat","axios","get","then","resp","setState","data","catch","error","console","log","map","movie","key","components_NowShowingSlider","original_title","backdrop_path","maxWidth","data-ride","Component","MovieList","poster","clickHandler","cardStyling","height","onClick","Trending","res","e","preventDefault","alert","_this3","movieList","components_MovieList","poster_path","bind","Popular","App","components_Navbar","components_NowShowing","components_Trending","components_Popular","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bdadbc18.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/Navbar.css\";\r\n\r\nconst Navbar = props => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n      <div className=\"container\">\r\n        <a href=\"#now-showing\" className=\"navbar-brand\">\r\n          Yay!Movies\r\n        </a>\r\n\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#myNavbar\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item\">\r\n              <a href=\"#now-showing\" className=\"nav-link\">\r\n                Now Showing\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a href=\"#trending\" className=\"nav-link\">\r\n                Trending\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a href=\"#popular\" className=\"nav-link\">\r\n                Popular\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"../styles/NowShowing.css\";\r\n\r\nconst NowShowingSlider = ({ image, title, overview, status }) => {\r\n  const styling = {\r\n    background: \"url(\" + image + \") no-repeat\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    minHeight: \"500px\",\r\n    backgroundPosition: \"center\"\r\n  };\r\n  return (\r\n    <div className={\"carousel-item \" + status} style={styling}>\r\n      <div className=\"carousel-caption\">\r\n        <h1 className=\"display-4\">{title}</h1>\r\n        <p className=\"lead\">{overview}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NowShowingSlider;\r\n","import React, { Component } from \"react\";\r\nimport NowShowingSlider from \"./NowShowingSlider\";\r\n\r\nimport axios from \"axios\";\r\n\r\nclass NowShowing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      results: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const apiKey = \"7538a1ba766c36605ab0e8e10bab23da\";\r\n    const url = `https://api.themoviedb.org/3/movie/now_playing?api_key=${apiKey}&language=en-US&page=1`;\r\n    axios\r\n      .get(url)\r\n      .then(resp => this.setState({ results: resp.data.results }))\r\n      .catch(error => console.log(error));\r\n  }\r\n  render() {\r\n    const { results } = this.state;\r\n    const data = results.map((movie, key) => {\r\n      return key < 6 ? (\r\n        <NowShowingSlider\r\n          key={movie.id}\r\n          title={movie.original_title}\r\n          overview={movie.overview}\r\n          image={\"https://image.tmdb.org/t/p/original\" + movie.backdrop_path}\r\n          status={key === 0 ? \"active\" : \"\"}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      );\r\n    });\r\n\r\n    const nowShowingStyling = {\r\n      minHeight: \"500px\",\r\n      maxWidth: \"100%\"\r\n    };\r\n    return (\r\n      <section id=\"now-showing\" style={nowShowingStyling}>\r\n        <div className=\"carousel slide\" data-ride=\"carousel\" id=\"myCarousel\">\r\n          <div className=\"carousel-inner\">{data}</div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NowShowing;\r\n","import React from \"react\";\r\n\r\nconst MovieList = ({ poster, title, clickHandler }) => {\r\n  const cardStyling = {\r\n    height: \"200px\",\r\n    background: \"url(\" + poster + \")\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\"\r\n  };\r\n  return (\r\n    <div className=\"card m-0 p-0\" style={cardStyling}>\r\n      <div className=\"card-img-overlay text-center\">\r\n        <a href=\"#movies\" onClick={clickHandler}>\r\n          {title}\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React, { Component } from \"react\";\r\nimport MovieList from \"./MovieList\";\r\n\r\nimport axios from \"axios\";\r\n\r\nclass Trending extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      results: []\r\n    };\r\n\r\n    //this.clickHandler = this.clickHandler.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const apiKey = \"7538a1ba766c36605ab0e8e10bab23da\";\r\n    const url = `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`;\r\n    axios\r\n      .get(url)\r\n      .then(res => this.setState({ results: res.data.results }))\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  clickHandler(id, e) {\r\n    e.preventDefault();\r\n    alert(id);\r\n  }\r\n  render() {\r\n    const { results } = this.state;\r\n    const movieList = results.map((movie, key) => {\r\n      return key < 8 ? (\r\n        <MovieList\r\n          key={movie.id}\r\n          title={movie.original_title}\r\n          poster={\"https://image.tmdb.org/t/p/original\" + movie.poster_path}\r\n          id={movie.id}\r\n          clickHandler={this.clickHandler.bind(this, movie.id)}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      );\r\n    });\r\n\r\n    return (\r\n      <section id=\"trending\">\r\n        <div className=\"trending-inner py-5 px-4\">\r\n          <h3 className=\"display-5 py-3 mb-3 border-bottom\">Trending Today</h3>\r\n          <div>\r\n            <div className=\"movie-grid\">{movieList}</div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Trending;\r\n\r\n//card, image,\r\n","import React, { Component } from \"react\";\r\nimport MovieList from \"./MovieList\";\r\n\r\nimport axios from \"axios\";\r\nclass Popular extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      results: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const apiKey = \"7538a1ba766c36605ab0e8e10bab23da\";\r\n    const url = `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=1`;\r\n    axios\r\n      .get(url)\r\n      .then(res => this.setState({ results: res.data.results }))\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  clickHandler(id, e) {\r\n    e.preventDefault();\r\n    alert(id);\r\n  }\r\n  render() {\r\n    const { results } = this.state;\r\n    const movieList = results.map((movie, key) => {\r\n      return key < 8 ? (\r\n        <MovieList\r\n          key={movie.id}\r\n          title={movie.original_title}\r\n          poster={\"https://image.tmdb.org/t/p/original\" + movie.poster_path}\r\n          clickHandler={this.clickHandler.bind(this, movie.id)}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      );\r\n    });\r\n    return (\r\n      <section id=\"popular\">\r\n        <div className=\"popular-inner py-5 px-4\">\r\n          <h3 className=\"display-5 py-3 mb-3 border-bottom\">Popular</h3>\r\n          <div>\r\n            <div className=\"movie-grid\">{movieList}</div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Popular;\r\n","import React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport NowShowing from \"./components/NowShowing\";\nimport Trending from \"./components/Trending\";\nimport Popular from \"./components/Popular\";\n\nimport \"./styles/App.css\";\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <NowShowing />\n        <Trending />\n        <Popular />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}